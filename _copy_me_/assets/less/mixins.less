.horizontal-gradient(@startColor: #eee, @endColor: white) {
 	background-color: @startColor;
	background-image: -webkit-gradient(linear, left top, right top, from(@startColor), to(@endColor));
	background-image: -webkit-linear-gradient(left, @startColor, @endColor);
	background-image: -moz-linear-gradient(left, @startColor, @endColor);
	background-image: -ms-linear-gradient(left, @startColor, @endColor);
	background-image: -o-linear-gradient(left, @startColor, @endColor);
	background-image: linear-gradient(left, @startColor, @endColor);
}

.vertical-gradient(@startColor: #eee, @endColor: white) {
 	background-color: @startColor;
	background-image: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
	background-image: -webkit-linear-gradient(top, @startColor, @endColor);
	background-image: -moz-linear-gradient(top, @startColor, @endColor);
	background-image: -ms-linear-gradient(top, @startColor, @endColor);
	background-image: -o-linear-gradient(top, @startColor, @endColor);
	background-image: linear-gradient(top, @startColor, @endColor);
}

.transition-raw(@transition) {
    -webkit-transition: @transition;
    -moz-transition: @transition;
    -o-transition: @transition;
    -ms-transition: @transition;
    transition: @transition;
}

.transition-delay(@delay) {
	-webkit-transition-delay: @delay;
	-moz-transition-delay: @delay;
	-o-transition-delay: @delay;
	-ms-transition-delay: @delay;
	transition-delay: @delay;
}

.transition(@prop: all, @time: 150ms, @ease: ease-in-out, @delay: 0ms) {
    .transition-raw(~"@{prop} @{time} @{ease}");
	.transition-delay(@delay);
}

.scale(@size) {
	-webkit-transform: scale(@size);
	-moz-transform: scale(@size);
	-ms-transform: scale(@size);
	transform: scale(@size);
}

.rotate(@amount) {
    -webkit-transform: rotate(@amount);
	-moz-transform: rotate(@amount);
	-ms-transform: rotate(@amount);
	transform: rotate(@amount);
}

.mobile-menu-toggle(@size, @rungSize) {
	position: relative;
	height: @size;
	width: @size;
	display: block;
	
	span, &:before, &:after {
		content: ' ';
		display: block;
		position: absolute;
		width: @size;
		height: 3px;
		.transition(all, 250ms, ease-in-out);
	}
	
	span {
		top: @size/2 - @rungSize/2;
		background: black;
	}
	
	&:before {
		top: 0px;
		background: black;
	}
	
	&:after {
		top: @size - @rungSize;
		background: black;
	}
	
	&.active {
        
        span {
        	opacity: 0;
        }
        
		&:after {
			.rotate(-45deg);
            top: @size/2 - @rungSize/2;
		}
		&:before {
			.rotate(45deg);
            top: @size/2 - @rungSize/2;
		}
	}
    
    &.black {
        span, &:before, &:after {
            background: black;
        }
    }
    
    &.white {
        span, &:before, &:after {
            background: white;
        }
    }
	
}

.antialias() {
	-webkit-font-smoothing: antialiased;
	-moz-font-smoothing: antialiased;
	-ms-font-smoothing: antialiased;
}

.aspect-ratio(@width, @height) {
	position: relative;
	
	&:before {
		display: block;
		content: "";
		width: 100%;
		padding-top: (unit(@height)/unit(@width)) * 100%;
	}
	
	> * {
		position: absolute;
		top: 0px;
		left: 0px;
		right: 0px;
		bottom: 0px;
	}
	
}

.text-columns(@n) {
	-webkit-column-count: @n;
	-moz-column-count: @n;
	column-count: @n;
}

.subpixel() {
	-webkit-font-smoothing: subpixel-antialiased !important;
	-moz-font-smoothing: subpixel-antialiased !important;
	font-smoothing: subpixel-antialiased !important;
}

.antialias() {
	-webkit-font-smoothing: antialias !important;
	-moz-font-smoothing: antialias !important;
	font-smoothing: antialias !important;
}

.no-pointer-events() {
    pointer-events: none;
}

.admin-bar-top() {
    
	.admin-bar & {
		top: 32px;
        
        @media screen and (max-width: 782px) {
            top: 46px;
        }
	}
    
}

.triangle-up(@size, @color) {
	width: 0; 
	height: 0; 
	border-left: @size solid transparent;
	border-right: @size solid transparent;
	border-bottom: @size solid @color;
}

.triangle-down(@size, @color) {
	width: 0; 
	height: 0; 
	border-left: @size solid transparent;
	border-right: @size solid transparent;
	border-top: @size solid @color;
}

.triangle-right(@size, @color) {
	width: 0; 
	height: 0; 
	border-top: @size solid transparent;
	border-bottom: @size solid transparent;
	border-left: @size solid @color;
}

.triangle-left(@size, @color) {
	width: 0; 
	height: 0; 
	border-top: @size solid transparent;
	border-bottom: @size solid transparent; 
	border-right: @size solid @color; 
}